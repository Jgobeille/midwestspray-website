{"version":3,"sources":["webpack://gatsby-tailwind-simplicity-theme/./node_modules/@babel/runtime/regenerator/index.js","webpack://gatsby-tailwind-simplicity-theme/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://gatsby-tailwind-simplicity-theme/./src/utils/useForm.js","webpack://gatsby-tailwind-simplicity-theme/./src/components/ContactForm.js","webpack://gatsby-tailwind-simplicity-theme/./node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","defaults","useState","values","setValues","updateValue","e","target","type","parseInt","name","containerStyles","formStyles","formContainerStyles","animation","duration","delay","easing","setError","loading","setLoading","message","setMessage","useForm","firstName","lastName","email","companyName","howCanWeHelp","submitOrder","fn","preventDefault","body","console","log","fetch","method","headers","JSON","stringify","res","text","parse","status","self","this","args","arguments","apply","err","undefined","data-sal","data-sal-duration","data-sal-delay","data-sal-easing","className","onSubmit","action","htmlFor","placeholder","onChange","rows","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"d45264a4de1f650f185c596d620c9318dc1eb06b-922d8c18145aec24ee59.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useState } from 'react';\n\nconst useForm = (defaults) => {\n  const [values, setValues] = useState(defaults);\n\n  function updateValue(e) {\n    // check if its a number and convert\n    let { value } = e.target;\n    if (e.target.type === 'number') {\n      value = parseInt(e.target.value);\n    }\n    setValues({\n      // copy the existing values into it\n      ...values,\n      // update the new value that changed\n      [e.target.name]: value,\n    });\n  }\n\n  return { values, updateValue };\n};\n\nexport default useForm;\n","import React, { useState } from 'react';\n\nimport { Link } from 'gatsby';\n\nimport useForm from '../utils/useForm';\n\nconst ContactForm = ({\n  containerStyles,\n  formStyles,\n  formContainerStyles,\n  animation,\n  duration,\n  delay,\n  easing,\n}) => {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const { values, updateValue } = useForm({\n    firstName: '',\n    lastName: '',\n    email: '',\n    companyName: '',\n    howCanWeHelp: '',\n    message: '',\n  });\n\n  const submitOrder = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setMessage(null);\n    // Gather all the data\n    const body = {\n      firstName: values.firstName,\n      lastName: values.lastName,\n      email: values.email,\n      companyName: values.companyName,\n      howCanWeHelp: values.howCanWeHelp,\n      message: values.message,\n    };\n\n    console.log(body);\n\n    // 4. send this data the serverless when they check out\n    const res = await fetch(`/api/contactRequest`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n\n    const text = JSON.parse(await res.text());\n\n    // check if everything worked\n    if (res.status >= 400 && res.status < 600) {\n      setLoading(false);\n      setError(text.message);\n    } else {\n      setLoading(false);\n      setMessage(text.message);\n    }\n  };\n\n  return (\n    <div\n      data-sal={animation}\n      data-sal-duration={duration}\n      data-sal-delay={delay}\n      data-sal-easing={easing}\n      className={containerStyles}\n    >\n      <div className={formContainerStyles}>\n        <form\n          className={formStyles}\n          onSubmit={submitOrder}\n          method=\"POST\"\n          action=\"/api/contactRequest\"\n        >\n          <div>\n            <label htmlFor=\"first name\">First Name *Required</label>\n            <br />\n            <input\n              name=\"firstName\"\n              type=\"text\"\n              placeholder=\"Hugh\"\n              className=\"rounded-sm form-input mt-1 mb-4 w-full border-0\"\n              value={values.firstName}\n              onChange={updateValue}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"last name\">Last Name *Required</label>\n            <br />\n            <input\n              name=\"lastName\"\n              type=\"text\"\n              placeholder=\"Jazz\"\n              className=\"rounded-sm form-input mt-1 mb-4 w-full border-0\"\n              value={values.lastName}\n              onChange={updateValue}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email *Required</label>\n            <br />\n            <input\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"hughJazz@gmail.com\"\n              className=\"rounded-sm form-input mt-1 mb-4 w-full border-0\"\n              value={values.email}\n              onChange={updateValue}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"company name\">Company Name</label>\n            <br />\n            <input\n              name=\"companyName\"\n              type=\"text\"\n              placeholder=\"Hugh's Jazz Company\"\n              className=\"rounded-sm form-input mt-1 mb-4 w-full border-0\"\n              value={values.companyName}\n              onChange={updateValue}\n            />\n          </div>\n          <div className=\"col-span-2\">\n            <label htmlFor=\"how can we help?\">How can we help?</label>\n            <br />\n            <select\n              name=\"howCanWeHelp\"\n              value={values.howCanWeHelp}\n              onChange={updateValue}\n              className=\"rounded-sm form-input mt-1 mb-4 w-full border-0 \"\n            >\n              <option value=\"Need a quote\">I need a quote</option>\n              <option value=\"General Inquiry\">I have a general inquiry</option>\n              <option value=\"Service call\">Service call</option>\n            </select>\n          </div>\n          <div className=\"col-span-2\">\n            <label htmlFor=\"message\">Message *Required</label>\n            <br />\n            <textarea\n              name=\"message\"\n              rows=\"5\"\n              className=\"rounded-sm w-full h-full border-0\"\n              value={values.message}\n              onChange={updateValue}\n            ></textarea>\n          </div>\n          <div className=\"mt-10 col-span-2\">\n            <div className=\"font-secondary text-red-600\">\n              {error ? <p>Error: {error}</p> : ''}\n            </div>\n            <div className=\"font-main text-lg text-ghost-white\">\n              {message ? <p>{message} </p> : ''}\n            </div>\n            <button\n              type=\"submit\"\n              className=\"px-4 font-secondary py-2 text-black bg-white rounded-sm shadow-sm  sm:top-4  hover:no-underline\"\n            >\n              {loading ? 'Sending...' : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}